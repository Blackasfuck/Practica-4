using System.Collections.Generic;

public class Order
{
    public List<Item> Items { get; private set; } = new List<Item>();
    public IPayment PaymentMethod { get; set; }
    public IDelivery DeliveryMethod { get; set; }

    public void AddItem(Item item)
    {
        Items.Add(item);
    }

    public double CalculateTotal(DiscountCalculator discountCalculator)
    {
        double total = 0;
        foreach (var item in Items)
        {
            total += item.Price * item.Quantity;
        }
        total -= discountCalculator.ApplyDiscount(total);
        return total;
    }
}

public class Item
{
    public string Name { get; }
    public double Price { get; }
    public int Quantity { get; }

    public Item(string name, double price, int quantity)
    {
        Name = name;
        Price = price;
        Quantity = quantity;
    }
}

public interface IPayment
{
    void ProcessPayment(double amount);
}

public class CreditCardPayment : IPayment
{
    public void ProcessPayment(double amount) { }
}

public class PayPalPayment : IPayment
{
    public void ProcessPayment(double amount) { }
}

public class BankTransferPayment : IPayment
{
    public void ProcessPayment(double amount) { }
}

public interface IDelivery
{
    void DeliverOrder(Order order);
}

public class CourierDelivery : IDelivery
{
    public void DeliverOrder(Order order) { }
}

public class PostDelivery : IDelivery
{
    public void DeliverOrder(Order order) { }
}

public class PickUpPointDelivery : IDelivery
{
    public void DeliverOrder(Order order) { }
}

public interface INotification
{
    void SendNotification(string message);
}

public class EmailNotification : INotification
{
    public void SendNotification(string message) { }
}

public class SmsNotification : INotification
{
    public void SendNotification(string message) { }
}

public class DiscountCalculator
{
    public double ApplyDiscount(double total)
    {
        return total * 0.1;
    }
}

public class Program
{
    public static void Main(string[] args)
    {
        var order = new Order();
        order.AddItem(new Item("Товар1", 100, 2));
        order.AddItem(new Item("Товар2", 50, 1));
        order.PaymentMethod = new CreditCardPayment();
        order.DeliveryMethod = new CourierDelivery();
        var discountCalculator = new DiscountCalculator();
        double total = order.CalculateTotal(discountCalculator);
        order.PaymentMethod.ProcessPayment(total);
        INotification notification = new EmailNotification();
        notification.SendNotification("Ваш заказ на сумму " + total + " успешно обработан.");
    }
}
